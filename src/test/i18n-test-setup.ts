import i18n from 'i18next'
import { initReactI18next } from 'react-i18next'

// Initialize i18n synchronously for tests
i18n.use(initReactI18next).init({
  lng: 'en',
  fallbackLng: 'en',
  debug: false, // Set to true for debugging
  resources: {
    en: {
      common: {
        save: 'Save',
        cancel: 'Cancel',
        submit: 'Submit',
        delete: 'Delete',
        edit: 'Edit',
        add: 'Add',
        remove: 'Remove',
        close: 'Close',
        loading: 'Loading...',
        error: 'Error',
        success: 'Success',
        warning: 'Warning',
        info: 'Info',
        confirm: 'Confirm',
        yes: 'Yes',
        no: 'No',
        next: 'Next',
        previous: 'Previous',
        continue: 'Continue',
        back: 'Back',
        home: 'Home',
        search: 'Search',
        filter: 'Filter',
        sort: 'Sort',
        refresh: 'Refresh',
        logout: 'Logout',
      },
      auth: {
        email: 'Email',
        password: 'Password',
        confirmPassword: 'Confirm Password',
        firstName: 'First Name',
        lastName: 'Last Name',
        login: 'Sign In',
        register: 'Register',
        forgotPassword: 'Forgot Password?',
        resetPassword: 'Reset Password',
        changePassword: 'Change Password',
        currentPassword: 'Current Password',
        newPassword: 'New Password',
        rememberMe: 'Remember me',
        signInWithGoogle: 'Sign in with Google',
        signInWithGitHub: 'Sign in with GitHub',
        createAccount: 'Create Account',
        alreadyHaveAccount: 'Already have an account?',
        dontHaveAccount: "Don't have an account?",
        acceptTerms: 'I accept the terms and conditions',
        emailRequired: 'Email is required',
        passwordRequired: 'Password is required',
        passwordsDoNotMatch: 'Passwords do not match',
        invalidEmail: 'Please enter a valid email address',
        passwordTooShort: 'Password must be at least 8 characters',
        loginFailed: 'Login failed',
        registrationFailed: 'Registration failed',
        loggedOut: 'You have been logged out',
        welcomeBack: 'Welcome back!',
        accountCreated: 'Account created successfully',
        checkEmail: 'Please check your email to verify your account',
        emailVerified: 'Email verified successfully',
        passwordChanged: 'Password changed successfully',
        passwordReset: 'Password reset successfully',
        // Additional login-specific translations
        'login.welcomeBack': 'Welcome back!',
        'login.signInToAccount': 'Sign in to your account',
        'login.email': 'Email',
        'login.emailPlaceholder': 'Enter your email',
        'login.password': 'Password',
        'login.passwordPlaceholder': 'Enter your password',
        'login.forgotPassword': 'Forgot password?',
        'login.showPassword': 'Show password',
        'login.hidePassword': 'Hide password',
        'login.rememberMe': 'Remember me',
        'login.rememberMeDays': 'Remember me for 30 days',
        'login.submit': 'Sign in',
        'login.signingIn': 'Signing in...',
        'login.orContinueWith': 'Or continue with',
        'login.continueWithApple': 'Continue with Apple',
        'login.continueWithGoogle': 'Continue with Google',
        'login.continueWithGithub': 'Continue with GitHub',
        'login.dontHaveAccount': "Don't have an account?",
        'login.signUp': 'Sign up',
        'login.demoCredentials': 'Demo Credentials',
        'login.byContinuing': 'By continuing, you agree to our',
        'login.termsOfService': 'Terms of Service',
        'login.privacyPolicy': 'Privacy Policy',
        'login.and': 'and',
        'login.error': 'Invalid email or password',
        'login.emailRequired': 'Email is required',
        'login.passwordRequired': 'Password is required',
        'login.invalidEmail': 'Invalid email format',
      },
      navigation: {
        dashboard: 'Dashboard',
        profile: 'Profile',
        settings: 'Settings',
        help: 'Help',
        about: 'About',
        contact: 'Contact',
        privacy: 'Privacy Policy',
        terms: 'Terms of Service',
      },
      forms: {
        required: 'This field is required',
        invalid: 'Please enter a valid value',
        tooShort: 'This field is too short',
        tooLong: 'This field is too long',
        mustMatch: 'Fields must match',
        invalidFormat: 'Invalid format',
      },
      errors: {
        generic: 'Something went wrong. Please try again.',
        network: 'Network error. Please check your connection.',
        unauthorized: 'You are not authorized to perform this action.',
        forbidden: 'Access forbidden.',
        notFound: 'The requested resource was not found.',
        serverError: 'Server error. Please try again later.',
        validationError: 'Please check your input and try again.',
        sessionExpired: 'Your session has expired. Please sign in again.',
      },
    },
  },
  interpolation: {
    escapeValue: false,
  },
  // Disable loading from external resources in tests
  load: 'currentOnly',
  preload: ['en'],
  // Disable namespace loading in tests for simplicity
  defaultNS: 'common',
  ns: ['common', 'auth', 'navigation', 'forms', 'errors'],
  // Disable translation key warnings in tests
  missingKeyHandler: false,
  saveMissing: false,
  // Make i18n synchronous in tests
  initImmediate: true,
  react: {
    useSuspense: false,
    bindI18n: 'loaded languageChanged',
    bindI18nStore: 'added removed',
  },
})

export { i18n }
