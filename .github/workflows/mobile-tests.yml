name: Mobile Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Mobile Testing Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck || npm run tsc || npx tsc --noEmit

      - name: Build application
        run: npm run build

      - name: Run mobile tests
        run: npx playwright test --config=playwright.config.mobile.ts

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-test-results-${{ matrix.node-version }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-screenshots-${{ matrix.node-version }}
          path: screenshots/
          retention-days: 30

  performance:
    name: Performance Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --config=.lighthouserc.js || echo "Lighthouse CI not configured"

      - name: Run performance tests
        run: npx playwright test tests/mobile/performance.spec.ts --config=playwright.config.mobile.ts

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            .lighthouseci/
            test-results/
          retention-days: 30

  visual-regression:
    name: Visual Regression Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run visual tests
        run: npx playwright test tests/mobile/visual.spec.ts --config=playwright.config.mobile.ts

      - name: Upload visual diff results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-diff-results
          path: |
            test-results/
            tests/mobile/visual.spec.ts-snapshots/
          retention-days: 30

  accessibility:
    name: Accessibility Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Install axe-playwright
        run: npm install --save-dev axe-playwright

      - name: Build application
        run: npm run build

      - name: Run accessibility tests
        run: npx playwright test tests/mobile/accessibility.spec.ts --config=playwright.config.mobile.ts

      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-results
          path: test-results/
          retention-days: 30

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          ANALYZE: true

      - name: Analyze bundle size
        run: |
          npm install -g bundlesize
          bundlesize || echo "Bundlesize not configured"

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            .next/analyze/
            dist/stats.html
          retention-days: 30

  report:
    name: Test Summary Report
    runs-on: ubuntu-latest
    needs: [test, performance, visual-regression, accessibility]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate summary report
        run: |
          echo "# Mobile Testing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance: ${{ needs.performance.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Regression: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Test reports, screenshots, and performance results have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
