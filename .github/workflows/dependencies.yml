name: Dependencies

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

concurrency:
  group: dependencies
  cancel-in-progress: false

jobs:
  # Update dependencies using Renovate-style approach
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for updates
        id: updates
        run: |
          # Check for outdated packages
          npm outdated --json > outdated.json || true

          if [ -s outdated.json ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Updates available:"
            cat outdated.json | jq -r 'keys[]'
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No updates available"
          fi

      - name: Update patch and minor versions
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          # Update patch versions (safe updates)
          npm update --save

          # Update dev dependencies patch versions
          npm update --save-dev

      - name: Run tests after updates
        if: steps.updates.outputs.has_updates == 'true'
        run: |
          npm run typecheck
          npm run lint
          npm run test
          npm run build

      - name: Create Pull Request
        if: steps.updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update dependencies'
          title: 'üîÑ Automated dependency updates'
          body: |
            ## üîÑ Automated Dependency Updates

            This PR contains automated dependency updates for patch and minor versions.

            ### Changes
            - Updated dependencies to their latest patch/minor versions
            - All tests pass
            - No breaking changes expected

            ### Verification
            - [x] Type checking passes
            - [x] Linting passes  
            - [x] Unit tests pass
            - [x] Build succeeds

            **Note**: This PR was created automatically. Please review the changes before merging.
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          # Run npm audit and capture output
          npm audit --audit-level=moderate --json > audit-results.json || true

          # Check if there are any vulnerabilities
          VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')

          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "üö® Found $VULNERABILITIES vulnerabilities"
            
            # Try to fix automatically
            npm audit fix --only=prod
            
            # Check if fixes were applied
            npm audit --audit-level=moderate --json > audit-results-after.json || true
            REMAINING=$(cat audit-results-after.json | jq '.metadata.vulnerabilities.total // 0')
            
            if [ "$REMAINING" -lt "$VULNERABILITIES" ]; then
              echo "‚úÖ Fixed $(($VULNERABILITIES - $REMAINING)) vulnerabilities"
              echo "create_pr=true" >> $GITHUB_OUTPUT
            else
              echo "‚ùå Could not automatically fix vulnerabilities"
            fi
          else
            echo "‚úÖ No vulnerabilities found"
          fi

      - name: Create security fix PR
        if: env.create_pr == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'fix(security): resolve security vulnerabilities'
          title: 'üîí Security vulnerability fixes'
          body: |
            ## üîí Security Vulnerability Fixes

            This PR contains automated fixes for security vulnerabilities found in dependencies.

            ### Changes
            - Applied `npm audit fix` to resolve security issues
            - Updated vulnerable dependencies to secure versions

            ### Verification
            Please review the changes and ensure:
            - [ ] Application still functions correctly
            - [ ] No breaking changes introduced
            - [ ] Security vulnerabilities are resolved

            **Note**: This PR was created automatically after detecting security vulnerabilities.
          branch: automated/security-fixes
          delete-branch: true
          labels: |
            security
            automated
            high-priority

  # License compliance check
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install license checker
        run: npm install --no-save license-checker

      - name: Check licenses
        run: |
          # Check for problematic licenses
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;Unlicense;CC0-1.0' --summary || {
            echo "‚ùå Found dependencies with incompatible licenses"
            echo "Please review the license report above"
            exit 1
          }

          echo "‚úÖ All dependency licenses are compatible"
